//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17626
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace AutorWidget.AutorReference {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Autor", Namespace="http://schemas.datacontract.org/2004/07/PopCornOneWebApp.Models")]
    public partial class Autor : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int AutorIdField;
        
        private string AutorNameField;
        
        private string AutorUrlField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AutorId {
            get {
                return this.AutorIdField;
            }
            set {
                if ((this.AutorIdField.Equals(value) != true)) {
                    this.AutorIdField = value;
                    this.RaisePropertyChanged("AutorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AutorName {
            get {
                return this.AutorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AutorNameField, value) != true)) {
                    this.AutorNameField = value;
                    this.RaisePropertyChanged("AutorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AutorUrl {
            get {
                return this.AutorUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.AutorUrlField, value) != true)) {
                    this.AutorUrlField = value;
                    this.RaisePropertyChanged("AutorUrl");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AutorReference.IAutorService")]
    public interface IAutorService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAutorService/DisplayAutors", ReplyAction="http://tempuri.org/IAutorService/DisplayAutorsResponse")]
        System.IAsyncResult BeginDisplayAutors(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<AutorWidget.AutorReference.Autor> EndDisplayAutors(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAutorService/CreateAutor", ReplyAction="http://tempuri.org/IAutorService/CreateAutorResponse")]
        System.IAsyncResult BeginCreateAutor(AutorWidget.AutorReference.Autor autor, System.AsyncCallback callback, object asyncState);
        
        bool EndCreateAutor(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAutorService/EditAutor", ReplyAction="http://tempuri.org/IAutorService/EditAutorResponse")]
        System.IAsyncResult BeginEditAutor(AutorWidget.AutorReference.Autor autor, System.AsyncCallback callback, object asyncState);
        
        bool EndEditAutor(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAutorService/DeleteAutor", ReplyAction="http://tempuri.org/IAutorService/DeleteAutorResponse")]
        System.IAsyncResult BeginDeleteAutor(int id, System.AsyncCallback callback, object asyncState);
        
        bool EndDeleteAutor(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAutorServiceChannel : AutorWidget.AutorReference.IAutorService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DisplayAutorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DisplayAutorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<AutorWidget.AutorReference.Autor> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<AutorWidget.AutorReference.Autor>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateAutorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateAutorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EditAutorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EditAutorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteAutorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteAutorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AutorServiceClient : System.ServiceModel.ClientBase<AutorWidget.AutorReference.IAutorService>, AutorWidget.AutorReference.IAutorService {
        
        private BeginOperationDelegate onBeginDisplayAutorsDelegate;
        
        private EndOperationDelegate onEndDisplayAutorsDelegate;
        
        private System.Threading.SendOrPostCallback onDisplayAutorsCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateAutorDelegate;
        
        private EndOperationDelegate onEndCreateAutorDelegate;
        
        private System.Threading.SendOrPostCallback onCreateAutorCompletedDelegate;
        
        private BeginOperationDelegate onBeginEditAutorDelegate;
        
        private EndOperationDelegate onEndEditAutorDelegate;
        
        private System.Threading.SendOrPostCallback onEditAutorCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteAutorDelegate;
        
        private EndOperationDelegate onEndDeleteAutorDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteAutorCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public AutorServiceClient() {
        }
        
        public AutorServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AutorServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AutorServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AutorServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<DisplayAutorsCompletedEventArgs> DisplayAutorsCompleted;
        
        public event System.EventHandler<CreateAutorCompletedEventArgs> CreateAutorCompleted;
        
        public event System.EventHandler<EditAutorCompletedEventArgs> EditAutorCompleted;
        
        public event System.EventHandler<DeleteAutorCompletedEventArgs> DeleteAutorCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AutorWidget.AutorReference.IAutorService.BeginDisplayAutors(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDisplayAutors(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<AutorWidget.AutorReference.Autor> AutorWidget.AutorReference.IAutorService.EndDisplayAutors(System.IAsyncResult result) {
            return base.Channel.EndDisplayAutors(result);
        }
        
        private System.IAsyncResult OnBeginDisplayAutors(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((AutorWidget.AutorReference.IAutorService)(this)).BeginDisplayAutors(callback, asyncState);
        }
        
        private object[] OnEndDisplayAutors(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<AutorWidget.AutorReference.Autor> retVal = ((AutorWidget.AutorReference.IAutorService)(this)).EndDisplayAutors(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDisplayAutorsCompleted(object state) {
            if ((this.DisplayAutorsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DisplayAutorsCompleted(this, new DisplayAutorsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DisplayAutorsAsync() {
            this.DisplayAutorsAsync(null);
        }
        
        public void DisplayAutorsAsync(object userState) {
            if ((this.onBeginDisplayAutorsDelegate == null)) {
                this.onBeginDisplayAutorsDelegate = new BeginOperationDelegate(this.OnBeginDisplayAutors);
            }
            if ((this.onEndDisplayAutorsDelegate == null)) {
                this.onEndDisplayAutorsDelegate = new EndOperationDelegate(this.OnEndDisplayAutors);
            }
            if ((this.onDisplayAutorsCompletedDelegate == null)) {
                this.onDisplayAutorsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDisplayAutorsCompleted);
            }
            base.InvokeAsync(this.onBeginDisplayAutorsDelegate, null, this.onEndDisplayAutorsDelegate, this.onDisplayAutorsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AutorWidget.AutorReference.IAutorService.BeginCreateAutor(AutorWidget.AutorReference.Autor autor, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateAutor(autor, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool AutorWidget.AutorReference.IAutorService.EndCreateAutor(System.IAsyncResult result) {
            return base.Channel.EndCreateAutor(result);
        }
        
        private System.IAsyncResult OnBeginCreateAutor(object[] inValues, System.AsyncCallback callback, object asyncState) {
            AutorWidget.AutorReference.Autor autor = ((AutorWidget.AutorReference.Autor)(inValues[0]));
            return ((AutorWidget.AutorReference.IAutorService)(this)).BeginCreateAutor(autor, callback, asyncState);
        }
        
        private object[] OnEndCreateAutor(System.IAsyncResult result) {
            bool retVal = ((AutorWidget.AutorReference.IAutorService)(this)).EndCreateAutor(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateAutorCompleted(object state) {
            if ((this.CreateAutorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateAutorCompleted(this, new CreateAutorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateAutorAsync(AutorWidget.AutorReference.Autor autor) {
            this.CreateAutorAsync(autor, null);
        }
        
        public void CreateAutorAsync(AutorWidget.AutorReference.Autor autor, object userState) {
            if ((this.onBeginCreateAutorDelegate == null)) {
                this.onBeginCreateAutorDelegate = new BeginOperationDelegate(this.OnBeginCreateAutor);
            }
            if ((this.onEndCreateAutorDelegate == null)) {
                this.onEndCreateAutorDelegate = new EndOperationDelegate(this.OnEndCreateAutor);
            }
            if ((this.onCreateAutorCompletedDelegate == null)) {
                this.onCreateAutorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateAutorCompleted);
            }
            base.InvokeAsync(this.onBeginCreateAutorDelegate, new object[] {
                        autor}, this.onEndCreateAutorDelegate, this.onCreateAutorCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AutorWidget.AutorReference.IAutorService.BeginEditAutor(AutorWidget.AutorReference.Autor autor, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEditAutor(autor, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool AutorWidget.AutorReference.IAutorService.EndEditAutor(System.IAsyncResult result) {
            return base.Channel.EndEditAutor(result);
        }
        
        private System.IAsyncResult OnBeginEditAutor(object[] inValues, System.AsyncCallback callback, object asyncState) {
            AutorWidget.AutorReference.Autor autor = ((AutorWidget.AutorReference.Autor)(inValues[0]));
            return ((AutorWidget.AutorReference.IAutorService)(this)).BeginEditAutor(autor, callback, asyncState);
        }
        
        private object[] OnEndEditAutor(System.IAsyncResult result) {
            bool retVal = ((AutorWidget.AutorReference.IAutorService)(this)).EndEditAutor(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEditAutorCompleted(object state) {
            if ((this.EditAutorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EditAutorCompleted(this, new EditAutorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EditAutorAsync(AutorWidget.AutorReference.Autor autor) {
            this.EditAutorAsync(autor, null);
        }
        
        public void EditAutorAsync(AutorWidget.AutorReference.Autor autor, object userState) {
            if ((this.onBeginEditAutorDelegate == null)) {
                this.onBeginEditAutorDelegate = new BeginOperationDelegate(this.OnBeginEditAutor);
            }
            if ((this.onEndEditAutorDelegate == null)) {
                this.onEndEditAutorDelegate = new EndOperationDelegate(this.OnEndEditAutor);
            }
            if ((this.onEditAutorCompletedDelegate == null)) {
                this.onEditAutorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEditAutorCompleted);
            }
            base.InvokeAsync(this.onBeginEditAutorDelegate, new object[] {
                        autor}, this.onEndEditAutorDelegate, this.onEditAutorCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AutorWidget.AutorReference.IAutorService.BeginDeleteAutor(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteAutor(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool AutorWidget.AutorReference.IAutorService.EndDeleteAutor(System.IAsyncResult result) {
            return base.Channel.EndDeleteAutor(result);
        }
        
        private System.IAsyncResult OnBeginDeleteAutor(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return ((AutorWidget.AutorReference.IAutorService)(this)).BeginDeleteAutor(id, callback, asyncState);
        }
        
        private object[] OnEndDeleteAutor(System.IAsyncResult result) {
            bool retVal = ((AutorWidget.AutorReference.IAutorService)(this)).EndDeleteAutor(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteAutorCompleted(object state) {
            if ((this.DeleteAutorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteAutorCompleted(this, new DeleteAutorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteAutorAsync(int id) {
            this.DeleteAutorAsync(id, null);
        }
        
        public void DeleteAutorAsync(int id, object userState) {
            if ((this.onBeginDeleteAutorDelegate == null)) {
                this.onBeginDeleteAutorDelegate = new BeginOperationDelegate(this.OnBeginDeleteAutor);
            }
            if ((this.onEndDeleteAutorDelegate == null)) {
                this.onEndDeleteAutorDelegate = new EndOperationDelegate(this.OnEndDeleteAutor);
            }
            if ((this.onDeleteAutorCompletedDelegate == null)) {
                this.onDeleteAutorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteAutorCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteAutorDelegate, new object[] {
                        id}, this.onEndDeleteAutorDelegate, this.onDeleteAutorCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override AutorWidget.AutorReference.IAutorService CreateChannel() {
            return new AutorServiceClientChannel(this);
        }
        
        private class AutorServiceClientChannel : ChannelBase<AutorWidget.AutorReference.IAutorService>, AutorWidget.AutorReference.IAutorService {
            
            public AutorServiceClientChannel(System.ServiceModel.ClientBase<AutorWidget.AutorReference.IAutorService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginDisplayAutors(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("DisplayAutors", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<AutorWidget.AutorReference.Autor> EndDisplayAutors(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<AutorWidget.AutorReference.Autor> _result = ((System.Collections.ObjectModel.ObservableCollection<AutorWidget.AutorReference.Autor>)(base.EndInvoke("DisplayAutors", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCreateAutor(AutorWidget.AutorReference.Autor autor, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = autor;
                System.IAsyncResult _result = base.BeginInvoke("CreateAutor", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndCreateAutor(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("CreateAutor", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEditAutor(AutorWidget.AutorReference.Autor autor, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = autor;
                System.IAsyncResult _result = base.BeginInvoke("EditAutor", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndEditAutor(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("EditAutor", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteAutor(int id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("DeleteAutor", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndDeleteAutor(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("DeleteAutor", _args, result)));
                return _result;
            }
        }
    }
}
